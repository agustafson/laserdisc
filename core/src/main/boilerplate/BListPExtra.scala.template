package laserdisc
package protocol

trait BListPExtra { this: BListP =>
  import Read.==>

  //BLPOP with no timeout specified
  [#final def blpop[A]([#key1: Key#])(
      implicit ev: NonNullBulkString ==> A
  ): Protocol.Aux[Option[KV[A]]] =
    blpop[A](OneOrMoreKeys.unsafeFrom([#key1# :: ] :: Nil), NonNegInt.unsafeFrom(##0))#
  ]

  //BLPOP with timeout specified
  [..21#final def blpop[A]([#key1: Key#], seconds: PosInt)(
      implicit ev: NonNullBulkString ==> A
  ): Protocol.Aux[Option[KV[A]]] =
    blpop[A](OneOrMoreKeys.unsafeFrom([#key1# :: ] :: Nil), NonNegInt.unsafeFrom(seconds.value))#
  ]

  //BRPOP with no timeout specified
  [#final def brpop[A]([#key1: Key#])(
      implicit ev: NonNullBulkString ==> A
  ): Protocol.Aux[Option[KV[A]]] =
    brpop[A](OneOrMoreKeys.unsafeFrom([#key1# :: ] :: Nil), NonNegInt.unsafeFrom(##0))#
  ]

  //BRPOP with timeout specified
  [..21#final def brpop[A]([#key1: Key#], seconds: PosInt)(
      implicit ev: NonNullBulkString ==> A
  ): Protocol.Aux[Option[KV[A]]] =
    brpop[A](OneOrMoreKeys.unsafeFrom([#key1# :: ] :: Nil), NonNegInt.unsafeFrom(seconds.value))#
  ]
}